#! /bin/bash

# anntate host in hosts file
anntateHosts() {
	touch "$1_temp"
	while read line
	do
		ip=`echo $line | cut -d " " -f1`
		host=`echo $line | cut -d " " -f2`
		echo $ip $host
		if [ $ip == "$2" ] || [ $host == "$3" ]; then
			echo "#$ip						$host" >> "$1_temp"
			continue
		fi
		echo "$line" >> "$1_temp"
	done < $1
	mv "$1_temp" "$1"
	annotation=`echo "$1" | grep "($2)|($3)"`
	echo -e "\033[33;5m$annotation\033[0m"
}

# check parameter
function checkParameters() {
	ip=`echo "$1" | egrep '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' | wc -l`
	domain=`echo "$2" | egrep '([[:alpha:]]{1,}\.)+(com)|(cn)|(org)|(net)' | wc -l`
	return $(($ip && $domain))
}

# add bind to hosts file
function addBindHosts() {
	while read line
	do
		ip=`echo $line | cut -d " " -f1`
		host=`echo $line | cut -d " " -f2`
		if [ $ip == $2 ] || [ $host == $3 ]; then
			echo -e "\033[33;5mHost: $line already exists!\033[0m"
			exit 0;
		fi
	done < $1
	echo "$2						$3" >> "$1"
}

# delete host from file
function deleteBindHosts() {
	touch "$1_temp"
	while read line
	do
		ip=`echo $line | cut -d " " -f1`
		host=`echo $line | cut -d " " -f2`
		if [[ $ip != $2 && $host != $3 ]]; then
			echo "$ip						$host" >> "$1_temp"
		fi
	done < "$1"
	rm "$1"
	mv "$1_temp" "$1";
}

filepath=$(cd "$(dirname "$0")"; pwd)

if [[ ! $1 ]]; then
	cat /etc/hosts | grep -v '^$'
	echo -e "\033[33;5mCurrent hosts file\033[0m"
	exit 0;
elif [[ $1 == "-a" ]]; then
	checkParameters "$3" "$4"
	if [[ $? == "1" ]]; then
		addBindHosts "$filepath"/"$2" "$3" "$4"
	else
		echo "add '$3' '$4' failed. wrong host/ip format"
		exit 1;
	fi
	exit 0;
elif [[ $1 == "-d" ]]; then
	deleteBindHosts "$filepath"/"$2" "$3" "$4"
	exit 0;
elif [[ $1 == "-n" ]]; then
	anntateHosts "$filepath"/"$2" "$3" "$4"
	exit 0;
fi

if [[ -f $filepath/$1 ]]; then
	cat $filepath/$1 > /etc/hosts
	cat /etc/hosts | grep -v '^$'
	echo -e "\033[33;5mChange enviorenment bind to $1\033[0m"
else
	echo -e "\033[31;5mHost file '$1' does not exist.\033[0m"
	#echo useage hint for user
	cat $filepath/readme.md
fi